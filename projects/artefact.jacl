#!../bin/jacl
# -----------------------------------------------------------------------------

constant status_window  0
constant game_title     "JACL Artefact Database"
constant game_author    "Stuart Allen"
constant game_release   1
constant game_build     0
constant ifid           "JACL-042"

# -----------------------------------------------------------------------------

integer temp
integer INDEX
integer now
integer gmt

integer last_artefact       0
integer current_artefact    0

string temp_string

string id          
string short_desc      ""
string description     ""
string location        "Australia"
integer datelost       0
integer datefound      0
string foundstatus     "NOT FOUND"

{+intro
set player = you
write "Reading database...^"

# GET THE LAST TASK ID
set last_artefact = 0
iterate "default"
   set last_artefact = field[0]
enditerate
set current_artefact = last_artefact
set current_artefact + 1
if matches = 1
   write "^1 record found.^"
endif
if matches > 1
   write "^" matches " records found.^"
endif
}

grammar blankjacl >blankjacl

{+blankjacl
}

grammar delete $integer >delete

{+delete
update "default"
   if field[0] != $integer
      insert field[0] field[1] field[2] field[3] field[4] field[5] field[6]
   endif
endupdate
write "Treasure " $integer " deleted.^"
}

grammar edit $integer >edit

{+edit
set editing = true
execute "+skip_to_treasure<$integer"
}

{+skip_to_treasure
iterate "default"
   if field[0] = $integer
      return
   endif
enditerate
}

grammar update >update

{+update
update "default"
   if field[0] = current_artefact
      insert field[0] short_desc description location datelost datefound foundstatus
   else
      insert field[0] field[1] field[2] field[3] field[4] field[5] field[6]
   endif
endupdate
write "Artefact " current_artefact ", ~" short_desc "~ updated.^"
}

grammar clear >new
grammar new >new

{+new
setstring short_desc ""
setstring description ""
setstring location "Australia"
set gmt = unixtime
set now = +adjusted_time<gmt
set datelost = now
set datefound = now
setstring foundstatus "NOT FOUND"
write "Artefact #" current_artefact " cleared.^"
}

grammar found $string >found

{+found
set datefound = +parse_date<$string
write "Date found set to " datefound{integer_date} "^"
}

grammar lost $string >lost

{+lost
set datelost = +parse_date<$string
write "Date lost set to " datefound{integer_date} "^"
}

grammar status $string >status

{+status
setstring foundstatus $string
write "New status set.^"
}

grammar location $string >location

{+location
setstring location $string
write "New location set.^"
}

grammar short $string >short

{+short
setstring short_desc $string
write "Short description set to ~" short_desc "~^"
}

grammar long $string >description
grammar description $string >description

{+description
setstring description $string
write "Description set to ~" description "~^"
}

grammar add >write
grammar commit >write
grammar write >write

{+write
if current_artefact <= last_artefact
   write "Writing will overwrite artefact " current_artefact ". Use UPDATE instead.^"
endif
set last_artefact + 1
set current_artefact + 1
append default current_artefact short_desc description location datelost datefound foundstatus
write "Artefact ~" short_desc "~ added.^"
}

grammar cat >print
grammar print >print

{+print
write "ID: " current_artefact "^"
write "SHORT DESCRIPTION: " short_desc "^"
write "DESCRIPTION: " description "^"
write "LOCATION: " location "^"
write "DATE LOST: "
if datelost = 0
   write "UNKNOWN^"
else
   write datelost{integer_date} "^"
endif
write "DATE FOUND: "
if datefound = 0
   write "UNKNOWN^"
else
   write datefound{integer_date} "^"
endif
write "STATUS: " foundstatus "^"
}

integer matches

string action

grammar quickadd >quickadd

{+quickadd
setstring description        "DEFAULT"
setstring location    "NULL"
set gmt = unixtime
set now = +adjusted_time<gmt
set startdate
setstring duedate        "NULL"
execute "+add_treasure"
}

grammar search $string >search

{+search
set matches = 0

iterate "default"
   ifstring field[1] contains search : field[2] contains search : field[3] contains search : field[4] contains search : field[5] contains search : field[6] contains search
      write "ID: " field[0]
      write "SHORT DESCRIPTION: " field[1]
      set matches + 1 
   endif
enditerate

if matches = 0
   write "^No matching treasures found.^"
endif
if matches = 1
   write "^1 matching treasure found.^"
endif
if matches > 1
   write "^" matches " matching treasures found.^"
endif
}

{+display_treasures
iterate "default"
   write "ID: " field[0] "^"
   write "SHORT DESCRIPTION: " field[1] "^"
   write "DESCRIPTION: " field[2] "^"
   write "LOCATION: " field[3] "^"
   write "DATE LOST: " field[4] "^"
   write "DATE FOUND: " field[5] "^"
   write "STATUS: " field[6] "^"
enditerate
}

location renko
  short    name "Renko"

object you

grammar last >last
grammar total >last

{+last
write "The total number of artefacts is " last_artefact ".^"
}

grammar select $integer >select
grammar set $integer >select

{+select
if $integer > last_artefact
   set current_artefact = last_artefact
   set current_artefact + 1
   write "Artefact set to " current_artefact ", the first new index.^"
   return
else
   set current_artefact = $integer
write "Artefact " current_artefact " selected.^"
endif
iterate default
   if field[0] = current_artefact
      setstring short_desc field[1]
      setstring description field[2]
      setstring location field[3]
      set datelost = field[4]
      set datefound = field[5]
      setstring foundstatus field[6]
   endif
enditerate
}

grammar pwd >current
grammar current >current
grammar current artefact >current

{+current
write "The currently selected artefact is " current_artefact ".^"
}

integer offset

{+update_status_window
write game_title " v" game_release "." game_build
setstring temp_string "CURRENT ARTEFACT: " current_artefact "/" last_artefact
length INDEX temp_string
set offset = status_width
set offset - INDEX
cursor offset 0
write temp_string
}

#include "time.library"
#include "validation.library"
