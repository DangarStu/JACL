<html>
<head>
	<title>The JACL Author's Guide</title>
	<meta name="description" content="Documentation for the JACL Adventure Creation Language.">
	<meta name="keywords" content="JACL,tutorial,programming,programmers,guide,manual,documention,instructions">
	<link rel=stylesheet type="text/css" href="styles.css">
</head>
<body>

<h1><a class="title" name="installation0">Installation</a></h1>

<p>The latest version of JACL can be found at <a href="http://code.google.com/p/jacl">http://code.google.com/p/jacl</a>. JACL is available as a zip file for Microsoft Windows and tar file for Unix operating systems. Once you have extracted the appropriate archive you will have a directory called <b>jacl</b> with several subdirectories. You will find the executable files in the <b>bin</b> subdirectory. In the Linux distribution you will find four interpreters: <b>jacl</b> is a console interpreter that uses the GlkTerm library by Andrew Plotkin, <b>garjacl</b> is a graphical interpreter that uses the Gargoyle library by Tor Andersson and Ben Cressey, while <b>cgijacl</b> and <b>fcgijacl</b> are the two web-based interpreters. <b>cgijacl</b> can be run directly from the command line and is used more for development purposes while <b>fcgijacl</b> must be used with a FastCGI-enabled webserver and is used more for production deployments. You will also find the program <b>bjorb</b>, a small utility (based on <b>blc</b> by Ross Raszewski) for creating the Blorb resource files that will contain any images and sounds you wish to use in your games. In the Microsoft Windows distribution you will find a single interpreter called <b>garjacl</b> and the same <b>bjorb</b> utility as in the Linux version. 

<h2><a class="section" name="installation1">Compilation</a></h2>

<p>The <b>src</b> directory contains the C source code to the JACL interpreter. Also included is the source to <b>glkterm</b> a Glk implementation by Andrew Plotkin based on ncursesw, and the <b>bjorb</b> utility .

<center>
<table width=85%><tr>
<th width=20%>&nbsp;Interpreter&nbsp;</th>
<th>&nbsp;Required Libraries&nbsp;</th>
<tr>
<td><b>jacl</b> (Posix)</td>
<td>GlkTerm by Andrew Plotkin (included) and ncursesw.
</td>
</tr><tr>
<td><b>garjacl</b></td>
<td>Gargoyle by Tor Andersson (included as a DLL and .so shared library).</td>
</tr><tr>
<td><b>cgijacl</b></td>
<td>No special libraries are required to compile <b>cgijacl</b>, however a POSIX compliant system is needed.
</tr><tr>
<td><b>fcgijacl</b></td>
<td>FastCGI, available from <a href="http://www.fastcgi.com/index.html">http://www.fastcgi.com/index.html</a>, or as the Debian packages:
<pre>
libfcgi-dev
libfci0c2
</pre>

</table>
</center>

<p>To compile the source for the JACL interpreters and the <b>bjorb</b> under Linux simply change to the <b>src</b> subdirectory and type the following command:

<pre>
make install
</pre>

<p>This will compile all the relevant programs and copy the executable binaries into the <b>bin</b> subdirectory.

<p>All the extra DLLs required for Microsoft Windows are included in the <b>bin</b> directory. In Linux distributions, only the core Gargoyle share library is included. This is file <b>libgarglk.so</b> in the <b>src/Gargoyle</b> directory and should be copied to the directory <b>/usr/local/lib</b>. Other required libraries should be installed using your operating systems packaging system. Below is the output of <b>ldd</b> to showing the complete list of libraries required:

<pre>
libgarglk.so           libjpeg.so.62
linux-gate.so.1        libm.so.6
libc.so.6              ld-linux.so.2
libfreetype.so.6       libz.so.1
libgtk-1.2.so.0        libgdk-1.2.so.0
libXi.so.6             libXext.so.6
libX11.so.6            libglib-1.2.so.0
libpng12.so.0          libSDL_mixer-1.2.so.0
libSDL-1.2.so.0        libgmodule-1.2.so.0
libdl.so.2             libXau.so.6
libxcb-xlib.so.0       libxcb.so.1
libasound.so.2         libdirectfb-1.0.so.0
libfusion-1.0.so.0     libdirect-1.0.so.0
libpthread.so.0        libXdmcp.so.6
</pre> 

<p>In the <b>games</b> directory you will find several JACL games. A JACL game consists of one or more <b>.jacl</b> files and an optional <b>.blorb</b> file that contains multimedia resources used by the game. If a JACL game consists of more than one <b>.jacl</b> file, the other file will be one of the library files from the <b>include</b> directory.

<p>Inside the <b>games</b> directory you will also find a <b>temp</b> directory. This is the directory where the interpreter will create the <b>.j2</b> files. A <b>.j2</b> file is a concatenation of a main game file and all other files included from that file. They are created by the interpreter when the game is first run and are encrypted by default.

<table class="infowarn"><tr>
<td><img src="warning.png" alt="Warning"></td>
<td>Under Unix, the user the JACL interpreter is run as must have write permissions to the <b>temp</b> directory.</td>
</tr></table>

<p>The <b>include</b> directory is found inside the <b>games</b> directory. In the <b>include</b> directory you will find <b>verbs.library</b>, the main interactive fiction library and <b>frame.jacl</b>, a skeleton program used as a starting point when writing a new piece of interactive fiction.

<p>In the <b>guide</b> directory you will find this documentation.

<h2><a class="section" name="installation2">Playing the Sample Games</a></h2>

<p>Once you have compiled versions of the JACL interpreters, try running one of the provided games by changing to the <b>bin</b> directory and typing the command:

<pre>
./garjacl ../games/grail.jacl
</pre>

<p>When you do so, you should see something like the screen below:

<center>&nbsp;<br><img src="grail.png" alt="The Unholy Grail running in the JACL interpreter"><br>&nbsp;<br></center>

<h3><a class="section" name="installation3">cgijacl and fcgijacl</a></h3>

<p>When the <b>cgijacl</b> and <b>fcgijacl</b> interpreters start they will first look for their configuration file in the current directory. If this does not exist they will look for it in the <b>etc</b> directory that is at the same level as the <b>games</b> directory. In other words, from the directory the game file being run is in, the <b>jacl</b> interpreter will look for <b>../etc/cgijacl.conf</b>. If neither of these files is found, the <b>cgijacl</b> or <b>fcgijacl</b> interpreters will also look for the file <b>/etc/cgijacl.conf</b>.

<P>The configuration files for <b>cgijacl</b> and <b>fcgijacl</b> may contain any of the following lines: 

<table width=100%><tr>
<th width=20%>Directive</th>
<th width=40%>Description</th>
<th width=40%>Default</th>
</tr><tr>
<td><b>access_log</b> <i>FileName</i></td>
<td>This indicates the file that should be used to log all moves made while playing. If a directory is specified with the trailing forward slash, the file name <b>access.log</b> is appended to the supplied directory.</td>
<td><b>../log/access.log</b> (from the location of the game file)</td>
</tr><tr>
<td><b>error_log</b> <i>FileName</i></td>
<td>This indicates the file that should be used to log all errors that occur while JACL programs are running. If a directory is specified with the trailing forward slash, the file name <b>error.log</b> is appended to the supplied directory.</td>
<td><b>../log/error.log</b> (from the location of the game file)</td>
</tr><tr>
<td><b>include</b> <i>Directory</i></td>
<td>This indicates the directory to look in to find any file specified in a <b>#include</b> preprocessor directive.</td>
<td>A directory called <b>include</b> beneath the directory the game file is stored in. If an included file is not found in this directory, the directory the game file is stored in is searched.</td>
</tr><tr>
<td><b>temp</b> <i>Directory</i></td>
<td>This indicates the directory to store the processed version of the game file.</td>
<td>A directory called <b>temp</b> beneath the directory the game file is stored in. If this directory does not exist, the <b>.j2</b> file will be created in the same directory as the game file.</td>
</tr></table>

<p style="page-break-before: always">Below is an example <b>cgijacl</b> configuration file:

<pre>
# "cgijacl.conf"
# CGIJACL interpreter configuration file.

access_log     "/usr/local/jacl/log/error.log" 
access_log     "/usr/local/jacl/log/access.log" 
temp           "/usr/local/jacl/games/temp/"
include        "/usr/local/jacl/games/include/"
</pre>

<h2><a class="section" name="installation5">Playing the Sample Games</a></h2>

<p>Once you have compiled the JACL interpreters, try running one of the provided games by changing to the <b>bin</b> directory and typing the command:

<pre>
./cgijacl ../games/blackjacl.jacl
</pre>

<p>This command will start the JACL interpreter on the default port of 4269, resulting in the following output:

<pre>
JACL Interpreter v2.7.0
WebJACL: Registered 8 media.
WebJACL: No port number specified (-p <number>), using default port 4269.
WebJACL server configured on WOPR:4269
</pre>

<p>To play this game, open your favourite web browser and navigate to the URL <b>http://localhost:4269</b>. When you do so, you should see something like the screen below. If not, see the section on <a href="troubleshooting.html">Trouble Shooting</a>.

<center>&nbsp;<br><img src="blackjacl.png"><br>&nbsp;<br></center>

<p>To play this same game from the console, try the following command from the <b>bin</b> directory:

<pre>
./jacl ../games/blackjack.jacl
</pre>

<h2><a class="section" name="installation6">Using JACL with FastCGI and Apache</a></h2>

<p>While the <b>cgijacl</b> interpreter is able to respond to HTTP requests internally, the <b>fcgijacl</b> interpreter is designed to be used with a FastCGI-enabled webserver such as Apache. The <b>cgijacl</b> interpreter is very easy to use and is ideal for developing a new game or allowing a small number of users to play your completed games. The <b>fcgijacl</b> interpreter, when used with a production-quality web server such as Apache, is probably better choice for situations where a high level of traffic is expected.

<p>Before the <b>fcgijacl</b> interpreter can be successfully used with an Apache server, the <b>mod_fastcgi</b> module must the installed and configured. There are many different ways to install both the Apache server and the <b>mod_fastcgi</b> module, all of which are detailed in their respective documentation. <b>mod_fastcgi</b> is available from <a href="http://freshmeat.net/projects/mod_fastcgi/index.html">http://freshmeat.net/projects/mod_fastcgi</a> or as the Debian package: 

<pre>
libapache2-mod-fastcgi 
</pre>

<p>FastCGI is a system for interfacing a web server with an external binary program, in this case the JACL interpreter. With normal CGI, a program is started to handle each individual request. The program executes, produces some output then terminates. Depending on the startup time of the specific program this can be an extemely inefficient process. With FastCGI, programs are run once then wait in a loop, processing requests as they are made. This suits programs such as the JACL interpreter perfectly as it has a fair amount of processing to do when a game is first run, yet very little for an individual move made by a player.

<p>Once <b>mod_fastcgi</b> is installed, Apache requires a file called <b>fastcgi.load</b> in your <b>mods-enabled</b> directory that contains the line:

<pre>
LoadModule fastcgi_module /usr/lib/apache2/modules/mod_fastcgi.so
</pre>

<p>To configure FastCGI, you must edit the file <b>fastcgi.conf</b> in your <b>mods-enabled</b> directory to read:

<pre>
&lt;IfModule mod_fastcgi.c&gt;
  AddHandler fastcgi-script .fcgi

  ScriptAlias /fastcgi-bin/ "/usr/local/fastcgi-bin/"

  &lt;Location /fastcgi-bin&gt;
    SetHandler fastcgi-script
    Options ExecCGI
  &lt;/Location&gt;

  FastCgiIpcDir /var/lib/apache2/fastcgi
&lt;/IfModule&gt;
</pre>

<P>This configuration creates a script alias of <b>/fastcgi-bin</b> that points to the directory <b>/usr/local/fastcgi-bin</b>. This directory must be created so that the user that the Apache server runs as has read and execute premissions to it. A script alias is a way of mapping URLs to directories on your file system. The above script alias says that any resource being accessed using a URL starting with <b>/fastcgi-bin</b> should be looked for in the directory <b>/usr/local/fastcgi-bin</b>.

<p>The location block says that any scripts accessed within the <b>/usr/local/apache/fastcgi-bin</b> directory are to be handled by <b>mod_fastcgi</b> and that the execution of CGI scripts is permitted. As you have probably guessed, this is directory where all your JACL games will be placed. You may alternatively wish to set a script alias like <b>/fastcgi-jacl</b> to point to the directory <b>/usr/local/jacl/games/</b> or wherever your JACL games reside.

<p>The <b>images</b> directory beneath the <b>games</b> directory of your JACL distribution will need to be copied to the Apache document root. The sample games are designed to read the images from <b>/images</b> when played with <b>fcgijacl</b>. It is necessary to load images from somewhere beneath the document root as Apache attempts to run any resource accessed from beneath <b>/fastcgi-bin</b> as a FastCGI script, which the images are not.

<p>Next, the file <b>cgijacl.conf</b> must be moved from <b>jacl/etc</b> to <b>/etc</b>. This file contains several configuration details, the most imortant directive for <b>fcgijacl</b> is <b>temp</b>. This specifies the directory that all persistant data will be written to. By default this is specified in <b>cgijacl.conf</b> as <b>/usr/local/jacl/games/temp</b>. It is important to ensure that the user the Apache server runs as has read and write permissions to whichever directory you specify by using a command such as:

<pre>
chmod 777 /usr/local/jacl/games/temp
</pre>

<p>Regardless of where you locate your JACL games, you will need to edit the first line of each game to point to the <b>fcgijacl</b> interpreter. For example:

<pre>
#!/usr/local/jacl/bin/fcgijacl
</pre>

<p>The below line will appear in the Apache error log if the first line of the game points to the interpreter in the wrong location. The line can be misleading as it is not the file <b>grail.jacl</b> that cannot be found but the interpreter binary it is attempting to run itself using.

<pre>
FastCGI: can't start server "/usr/local/fastcgi-bin/grail.jacl" (pid 2539), exec
le() failed: No such file or directory
</pre>

<p>Once you have finished configuring JACL and Apache, start Apache and open the following URL from your browser: <b>http://localhost/fastcgi-bin/tutorial.jacl</b>. If all has gone well, you should see the title page for this game. If not, try looking in Apache's <b>error_log</b> and <b>/usr/local/jacl/log/error.log</b>. 

<!-- END OF BODY -->
<p><a href="index.html">Back to Contents</b>
</body>
</html>
